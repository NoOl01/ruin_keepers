// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/changePassword": {
            "post": {
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "description": "Данные для смены пароля",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/common.ChangePassword"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/admin/delete": {
            "post": {
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/admin/getAll": {
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {}
            }
        },
        "/admin/login": {
            "post": {
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "description": "Данные админа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/admin/register": {
            "post": {
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "description": "Данные админа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/admin/tours/add": {
            "post": {
                "tags": [
                    "admin tours"
                ],
                "parameters": [
                    {
                        "description": "Данные тура",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Entry"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOnly"
                        }
                    }
                }
            }
        },
        "/admin/tours/delete": {
            "post": {
                "tags": [
                    "admin tours"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID тура",
                        "name": "tourId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOnly"
                        }
                    }
                }
            }
        },
        "/admin/tours/update": {
            "post": {
                "tags": [
                    "admin tours"
                ],
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Entry"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID тура",
                        "name": "tourId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorOnly"
                        }
                    }
                }
            }
        },
        "/tours/all": {
            "get": {
                "tags": [
                    "tours"
                ],
                "summary": "получение туров",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/tours/scheduledTourById": {
            "get": {
                "tags": [
                    "tours"
                ],
                "summary": "получение расписания туров по id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/tours/scheduledTours": {
            "get": {
                "tags": [
                    "tours"
                ],
                "summary": "получение расписания туров",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/tours/signUpToTour": {
            "get": {
                "tags": [
                    "tours"
                ],
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Entry"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        },
        "/tours/tourById": {
            "get": {
                "tags": [
                    "tours"
                ],
                "summary": "получение туров по id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResultWithErrors"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.ChangePassword": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "common.ErrorOnly": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "common.ResultWithErrors": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "database.Admin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "database.Entry": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "count_members": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_need_lunch": {
                    "type": "boolean"
                },
                "is_need_notify": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "scheduled_tour_id": {
                    "type": "integer"
                },
                "telegram_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Ruin keepers",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
